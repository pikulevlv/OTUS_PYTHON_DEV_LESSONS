20:02:16	 From Evgeniy Vrublevskiy : Всем привет!
20:02:19	 From MaximVS : привет
20:02:21	 From MaximVS : всё гуд
20:02:26	 From Артём Поздеев : Всем привет!
20:02:28	 From Артём Поздеев : +++
20:02:30	 From MaximVS : слышно+видно
20:02:42	 From Омелюхин Илья : +
20:02:43	 From Anton : Привет всем
20:03:45	 From Никита : с горутинами работал
20:04:00	 From Stas Klimovich : только теорию смотрел
20:04:12	 From Омелюхин Илья : try/catch async/await js
20:04:36	 From danil : стэк создают?
20:05:19	 From danil : да у каждой рутины свой стэк?
20:07:01	 From Stas Klimovich : несколько потоков выделяются в рамках одного потока, вроде
20:07:14	 From Stas Klimovich : *процесса
20:07:33	 From Anton : у процессов разная память
20:07:37	 From Anton : у потоков одна
20:11:00	 From Stas Klimovich : ну да, если чисто вычислительная задача, многопоточность бессмысленна, они нужны только когда много переключения контекста
20:13:30	 From Stas Klimovich : оно не параллельно, а как бы последовательно, но кусочками 
20:14:29	 From Никита : так а в чем разница асинкао и потоками?
20:15:11	 From Stas Klimovich : асинхронность работает в одном потоке
20:16:10	 From Никита : т.е. asyncio это тоже самое, что и multithread? 
20:22:56	 From Никита : асинхронные функции работают параллельно или поочередно?
20:23:01	 From Никита : выполняются вернее
20:26:46	 From Марк Гостряк : +
20:28:34	 From Evgeniy Vrublevskiy : +
20:32:06	 From Stas Klimovich : альтернативный пример на асинхронность: асинхронность обычно делают для протяженных по времени задач (например, обмен сообщениями между сервером и клиентом), которые предполагают переключение контекста (например взаимодействие с несколькими клиентами). Суть асинхронности в том, что пока сервер ждет ответа от одного клиента, он не висит без дела, а может переключиться на второго клиента. Все последовательно, но как бы параллельно
20:32:53	 From Stas Klimovich : да, я долго писал))
20:35:02	 From Aleksandr V. Borisov : await помечает место, где можно передать управление в другую функцию?
20:38:44	 From Никита : run_main_sync() ожидает результат run_async() ?
20:43:29	 From Артём Поздеев : Правильно ли я понял: можно вызывать функции асинхронно только через asyncio?
20:44:11	 From Никита : например из фласк роута нельзя вызвать будет асинхронную фнукию?
20:46:58	 From Никита : сама функция run_main_async() ведь ожидает завершения for() и bar() ?
20:47:02	 From Никита : foor()
20:47:05	 From Никита : foot()*
20:49:12	 From Никита : получается из роутов фласка нельзя будет вызвать функцию, что бы завершилась уже после возвращения response 
20:49:24	 From Evgeniy Vrublevskiy : В await указывается некоторое условие, которое служит признаком переключения контекста на конкретно эту функцию? При условии, что условие уже выполнилось
20:49:29	 From Артём Поздеев : foo и bar выполнялись на разных процессорах?
20:57:12	 From Никита : а зачем async внутри async? 
20:58:13	 From Артём Поздеев : Уточните пожалуйста, что именно делает ClienSession?
20:58:18	 From nik0 : Что такое ClientSession в даном случае
20:59:01	 From Anton : +
20:59:02	 From Evgeniy Vrublevskiy : +
20:59:02	 From Артём Поздеев : т.е. это объект, который работает с запросом?
20:59:07	 From Vladimir : +
20:59:08	 From Артём Поздеев : +
21:08:12	 From Никита : Асинхронность применяется при взаимодействии с микросервисами?
21:12:01	 From Никита : а можно отменить задачи, если взникает какой-то exception внутри уже обработанной задачи?
21:12:35	 From Никита : =============
21:12:35	 From Никита : а можно отменить задачи, если взникает какой-то exception внутри уже обработанной задачи?
21:12:52	 From Артём Поздеев : объясните пожалуйста, как именно работает конструкция done, pending = ...
21:15:08	 From Артём Поздеев : т.е. если слева от равенства несколько имен переменных через запятую, то каждая будет заполнена если справа от равенства коллекция?
21:15:27	 From Никита : а таймаут для чего?
21:15:29	 From Артём Поздеев : спасибо
21:16:53	 From Никита : по таймауту, если не выполняттся все за 3 сек?
21:17:02	 From Никита : или один какой-то из coros
21:17:36	 From Evgeniy Vrublevskiy : Разве в этом случае не будет вызван break после первой же итерации?
21:19:40	 From Никита : по таймауту, если не выполняттся все за 3 сек?или один какой-то из coros
21:22:44	 From Stas Klimovich : а это не блокирующая функция?
21:22:48	 From Stas Klimovich : time
21:26:45	 From Evgeniy Vrublevskiy : (повтор) В await указывается некоторое условие, которое служит признаком переключения контекста на конкретно эту функцию? При условии, что условие уже выполнилось
21:26:53	 From nik0 : что за футуры?
21:27:57	 From Evgeniy Vrublevskiy : Имеется в виду -- как в примере, где переключение контекста ждет, когда у функции истечёт один из таймеров (или в foo или в bar)
21:32:28	 From Evgeniy Vrublevskiy : Да, спасибо!
21:34:48	 From Артём Поздеев : Спасибо
21:34:48	 From andre : спасибо за урок
21:34:49	 From Evgeniy Vrublevskiy : Большое спасибо! Всем пока!
21:34:51	 From Anton : всем пока!
21:34:53	 From Stas Klimovich : большое спасибо!
21:34:53	 From Омелюхин Илья : Cgfcb,j!
